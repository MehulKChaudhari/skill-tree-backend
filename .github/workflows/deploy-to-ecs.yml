name: Deploy to ECS

on:
  push:
    branches:
      - docker-aws

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1
      
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/skill-tree-api:latest \
                       --build-arg SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }} \
                       --build-arg SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }} \
                       --build-arg SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }} \
                       --build-arg SPRING_JPA_HIBERNATE_DDL_AUTO=${{ secrets.SPRING_JPA_HIBERNATE_DDL_AUTO }} \
                       --build-arg MYSQL_HOST=${{ secrets.MYSQL_HOST }} \
                       --build-arg DB_NAME=${{ secrets.DB_NAME }} \
                       --build-arg MYSQL_DB_USERNAME=${{ secrets.MYSQL_DB_USERNAME }} \
                       --build-arg MYSQL_DB_PASSWORD=${{ secrets.MYSQL_DB_PASSWORD }} \
                       --build-arg DB_DDL_POLICY=${{ secrets.DB_DDL_POLICY }} \
                       --build-arg API_V1_PREFIX=/api/v1 \
                       --build-arg SPRING_DATASOURCE_VERSION=8.1.0 \
                       -f skill-tree/Dockerfile .

          docker push ${{ secrets.DOCKERHUB_USERNAME }}/skill-tree-api:latest

      - name: Deploy to ECS
        run: |
          aws ecs update-service --cluster skill-backend-trail --service skill-tree-cluster --force-new-deployment
