name: Deploy to EC2

on:
  push:
    branches:
      - docker-aws

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        run: aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.ECR_URI }}:latest \
                       --build-arg SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }} \
                       --build-arg SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }} \
                       --build-arg SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }} \
                       --build-arg SPRING_JPA_HIBERNATE_DDL_AUTO=${{ secrets.SPRING_JPA_HIBERNATE_DDL_AUTO }} \
                       --build-arg MYSQL_HOST=${{ secrets.MYSQL_HOST }} \
                       --build-arg DB_NAME=${{ secrets.DB_NAME }} \
                       --build-arg MYSQL_DB_USERNAME=${{ secrets.MYSQL_DB_USERNAME }} \
                       --build-arg MYSQL_DB_PASSWORD=${{ secrets.MYSQL_DB_PASSWORD }} \
                       --build-arg DB_DDL_POLICY=${{ secrets.DB_DDL_POLICY }} \
                       --build-arg API_V1_PREFIX=/api/v1 \
                       --build-arg SPRING_DATASOURCE_VERSION=8.1.0 \
                       -f skill-tree/Dockerfile .
          docker push ${{ secrets.ECR_URI }}:latest

      - name: Deploy to EC2
        run: |
          ssh -i path/to/your/private/key.pem ${{secrets.AWS_EC2_IP}} "docker pull ${{ secrets.ECR_URI }}:latest && docker-compose -f path/to/your/docker-compose.yml up -d"
